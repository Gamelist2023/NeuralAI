# Python: チャット (非ストリーミング)
import requests
import json
from typing import Optional

def chat_with_ai(provider_name: Optional[str], model: str, message: str, api_key: Optional[str] = None):
    url = "http://127.0.0.1:9002/chat"
    headers = {'Content-Type': 'application/json'}
    data = {
        "provider_name": provider_name,
        "model": model,
        "message": message,
        "api_key": api_key,
        "stream": False,
        "type": "chat"
    }
    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()
        return response.json()['response']
    except requests.exceptions.RequestException as e:
        print(f"Request failed: {e}")
        if e.response is not None:
            try:
                print(f"Error response: {e.response.json()}")
            except json.JSONDecodeError:
                print(f"Error response (text): {e.response.text}")
        return None
    except KeyError:
        print(f"Error: 'response' key not found in the JSON response.")
        try:
            print(f"Received JSON: {response.json()}")
        except json.JSONDecodeError:
            print(f"Received non-JSON response: {response.text}")
        return None
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
        return None

# 使用例 1: プロバイダー指定
try:
    response = chat_with_ai("Gemini", "gemini-1.5-flash", "こんにちは")
    if response:
        print("AI Response (Gemini):", response)
except Exception as e:
    print(f"An error occurred (Gemini): {e}")

# 使用例 2: プロバイダー指定なし (デフォルトを使用)
try:
    response = chat_with_ai(None, "gpt-4o-mini", "デフォルトプロバイダーで挨拶して")
    if response:
        print("AI Response (Default):", response)
except Exception as e:
    print(f"An error occurred (Default): {e}")
